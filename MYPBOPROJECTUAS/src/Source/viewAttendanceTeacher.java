/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Source;



import Source.model.Subject;
import Source.model.attendance;
import Source.model.database;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wa Ode Raksni Dumpatua
 */
public class viewAttendanceTeacher extends javax.swing.JInternalFrame {

    /**
     * Creates new form addTeacherFormin
     */
    public viewAttendanceTeacher() {
        initComponents();        
        tampil_subject(tnip.getText());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
        String d = "";
            if(date.getDate() == null){
                d = "";
            }else{
                d = sdf.format(date.getDate());
            }        
            String k = "";
            String s ="";
        try{            
            
            if(kelas.getSelectedIndex()==-1){
                k="";
            }else{
                k=kelas.getSelectedItem().toString();
            }if(subject.getSelectedIndex()==0){
                s="";
            }else{            
                s= database.getInstance().getSubjectId(subject.getSelectedItem().toString());
            }
            loadTableData(d,s,k);
        }catch(SQLException e){
            System.err.println(e);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data table", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }
      
    
    public final void tampil_subject(String b){
        try {
            for(Subject sub:database.getInstance().getTeacherSubject(b)){
                subject.addItem(sub.getSubjectname());
                System.out.println("name "+sub.getSubjectname());
                System.out.println("Nip: "+b);
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    
    }
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
    
    
    
    private void loadTableData(String d, String s, String k){
        DefaultTableModel dtm = (DefaultTableModel) datatable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        try{
        //isi tabel 
            for(attendance sub:
            database.getInstance().getAttendence(d,s,k)){
                dtm.addRow(new Object[]{sub.getDate(),sub.getMahasiswa().getNim(),sub.getMahasiswa().getNama(),sub.getKelas().getClassname(),sub.getSubject().getSubjectname(), sub.getSession(), sub.getStatus()});
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data table", "Gagal", JOptionPane.ERROR_MESSAGE);
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kelas = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        subject = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        getTable = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        csv = new javax.swing.JButton();
        xls = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        datatable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tnip = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setTitle("View Attendence Data");
        setMaximumSize(new java.awt.Dimension(990, 550));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(790, 614));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Date");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 80, 150, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Attendance Batch");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(270, 40, 220, 22);

        kelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Kelas---"}));
        kelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kelasActionPerformed(evt);
            }
        });
        getContentPane().add(kelas);
        kelas.setBounds(620, 80, 130, 30);

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Subject");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(270, 80, 150, 30);

        subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Mata Kuliah---"}));
        subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectActionPerformed(evt);
            }
        });
        getContentPane().add(subject);
        subject.setBounds(370, 80, 140, 30);

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(550, 80, 150, 30);

        getTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getTable.setText("GET");
        getTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getTableActionPerformed(evt);
            }
        });
        getContentPane().add(getTable);
        getTable.setBounds(365, 130, 90, 30);
        getContentPane().add(date);
        date.setBounds(100, 82, 140, 30);

        csv.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        csv.setText("Export File ( *csv)");
        csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvActionPerformed(evt);
            }
        });
        getContentPane().add(csv);
        csv.setBounds(170, 480, 130, 22);

        xls.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        xls.setText("Export File ( *xls)");
        xls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlsActionPerformed(evt);
            }
        });
        getContentPane().add(xls);
        xls.setBounds(520, 480, 130, 22);

        datatable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Student ID", "Student Name", "Class", "Subject", "Session", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        datatable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datatableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datatable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(42, 170, 710, 290);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Source/res/black1.jpg"))); // NOI18N
        jLabel2.setText("Lec");
        jLabel2.setPreferredSize(new java.awt.Dimension(794, 565));
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 790, 570);
        setBounds(0, 0, 790, 570);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 6, 790, 570);
        getContentPane().add(tnip);
        tnip.setBounds(140, 30, 0, 0);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kelasActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_kelasActionPerformed

    private void subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectActionPerformed
        // TODO add your handling code here:
        try {
            kelas.removeAllItems();
            String subjectid = database.getInstance().getSubjectId(subject.getSelectedItem().toString());
            ArrayList<String> k = (ArrayList<String>) database.getInstance().getListSubjectClass(subjectid);
            int n = k.size();
            for (int i = 0; i < n; i++) {
                kelas.addItem(k.get(i));
            }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_subjectActionPerformed

    private void datatableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datatableMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_datatableMouseClicked

    private void getTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getTableActionPerformed

        // TODO add your handling code here:
        String d = "";
            if(date.getDate() == null){
                d = "";
            }else{
                d = sdf.format(date.getDate());
            }        
            String k = "";
            String s ="";
        try{            
            
            if(kelas.getSelectedIndex()==-1){
                k="";
            }else{
                k=kelas.getSelectedItem().toString();
            }if(subject.getSelectedIndex()==0){
                s="";
            }else{            
                s= database.getInstance().getSubjectId(subject.getSelectedItem().toString());
            }
            if(k.equals("")||s.equals("")){   
                JOptionPane.showMessageDialog(this, "Subject dan Kelas tidak boleh kosong");
            }else{
                loadTableData(d,s,k);
            }
        }catch(SQLException e){
            System.err.println(e);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data table", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_getTableActionPerformed

    private void csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvActionPerformed
        // TODO add your handling code here:
        JFileChooser j = new JFileChooser();
        j.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Comma Separated Values", "csv");
        j.addChoosableFileFilter(filter);

        j.setDialogTitle("File to save");
        int userSelection = j.showSaveDialog(this);
        
        
        if(userSelection == JFileChooser.APPROVE_OPTION){
            //save as csv
            File f = j.getSelectedFile();
            if (f!= null){
                f = new File(f.toString()+".csv");
            }
               
            try{
                FileWriter fw = new FileWriter(f);
                BufferedWriter b = new BufferedWriter(fw);

                b.write("Date"+","+"NIM"+","+"Nama"+","+"Kelas"+","+"Mata Kuliah"+","+"Sesi"+","+"Status Kehadiran"+",");
                b.newLine();

                for(int i=0; i<datatable.getRowCount();i++){
                   for(int k=0; k<datatable.getColumnCount();k++){
                       b.write(datatable.getValueAt(i,k).toString()+",");
                   }
                   b.newLine();
                }

                b.close();
                fw.close();
                JOptionPane.showMessageDialog(this,"Berhasil Mengekspor File (*.csv)");
            } catch (IOException ex) {
                Logger.getLogger(viewAttendance.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_csvActionPerformed

    private void xlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlsActionPerformed
        // TODO add your handling code here:
        FileWriter fileWriter;
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("[B]export_output/excel[/B]"));
        int retrival = chooser.showSaveDialog(null);
        if (retrival == JFileChooser.APPROVE_OPTION) {
            try{
                DefaultTableModel tModel = (DefaultTableModel) datatable.getModel();
                fileWriter = new FileWriter(new File(chooser.getSelectedFile() + ".xls"));           
            // write header
                    fileWriter.write("Date"+"\t"+"NIM"+"\t"+"Nama"+"\t"+"Kelas"+"\t"+"Mata Kuliah"+"\t"+"Sesi"+"\t"+"Status Kehadiran"+"\t");

                fileWriter.write("\n");
                
            // write record
                for(int i=0; i < tModel.getRowCount(); i++) {
                    for(int j=0; j < tModel.getColumnCount(); j++) {
                        fileWriter.write(tModel.getValueAt(i,j).toString() + "\t");
                    }
                    fileWriter.write("\n");
                }
                fileWriter.close();
                JOptionPane.showMessageDialog(this, "Berhasil Mengekspor File (*.xls)");
            }catch(IOException e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_xlsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton csv;
    private javax.swing.JTable datatable;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton getTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JComboBox<String> kelas;
    public javax.swing.JComboBox<String> subject;
    public javax.swing.JLabel tnip;
    private javax.swing.JButton xls;
    // End of variables declaration//GEN-END:variables
}
